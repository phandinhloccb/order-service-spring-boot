spring:
  application:
    name: order-service

  datasource:
    url: jdbc:mysql://localhost:3307/order_service 
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: mysql
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000

  jpa:
    hibernate:
      ddl-auto: validate 
    show-sql: true
    properties:
      hibernate:
        formatSql: true
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          timeZone: UTC

  h2:
    console:
      enabled: false

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: false
    drop-first: false  
    default-schema: order_service
    liquibase-schema: order_service
    contexts: dev,prod  
    label-filter: v1.0.0      
    parameters:
      appName: order-service
      appVersion: 1.0.0
  
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8085
    output:
      topic:
        order-completed: orders.order.completed.v1

server:
  port: 8081

logging:
  level:
    liquibase: INFO
    comLoc: DEBUG
    orgSpringframeworkJdbc: DEBUG
    orgSpringframeworkWeb: DEBUG

inventory:
  service:
    url: http://localhost:8082

servers:
  include-warmup: true

# Spring Boot Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus  # Explicitly include metrics and prometheus
      base-path: ""
  endpoint:
    health:
      enabled: true
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true  # Explicitly enable metrics
    prometheus:
      enabled: true  # Explicitly enable prometheus
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
    mongo:
      enabled: true
  server:
    port: 8081
  metrics:
    export:
      prometheus:
        enabled: true  # Enable Prometheus metrics export

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    enabled: false
  show-actuator: true
  group-configs:
    - group: order-service
      paths-to-match: /api/order/**
      display-name: Order Service API
